


<숫자야구게임 보완,추가기능>
1. 처음 '새게임'버튼을 클릭해서 게임을 시작
   - 새게임을 누르기 전까지는 TextField 입력금지!!
      tf.setEditable(false);//편집금지(TextField,TextArea)
      tf.setEnabled(false);//비활성화(전체컴포넌트에 적용)

2. TextArea에 글자쓰기 금지
     ta.setEditable(false);

3. 게임 시작전 첫화면에 게임설명.
    ta.setText("\n\n\t<숫자야구게임>");
	     ta.append("\n    1. 게임시작을 위해서 새게임버튼을 클릭");
	     ta.append("\n    2. 입력에 중복되지않는 세자리 수를 입력후 엔터");
	     ta.append("\n    3. 숫자와 자릿수를 맞추면 Strike");
	     ta.append("\n       숫자만 맞추면 Ball이 추가됩니다.");
	     ta.append("\n    4. 정답을 보고 싶으면 정답버튼을 클릭");
	     ta.append("\n    5. 기타 문의사항이 있으면 관리자에게 연락바람");
	     ta.append("\n      (070-5039-5815)");

4. TextField에 3자리 수만 입력
5. 사용자입력숫자에 대한 중복검사
6. 입력된 수에 대한 카운트 출력.



-----------------------------------------------

MVC : Model2라는 범주안의 MVC패턴을 의미

유지보수 - 비용절감

model1(구분없이 필요한 내용들(절차적인요소들)을 프로그래밍
model2(내용, 형식에 따라서 파일을 분류해서 프로그래밍)
----> 개발방식

model
----> 데이터

<MVC Model2구조>
1. Model(모델) :기능
  - 비즈니스로직과 관련된 부분 처리
  - 데이터베이스 관련로직 구현
  - JSP Beans(같은 속성을 가진 데이터의 묶음), EJB Component
  - 애플리케이션의 데이터를 표현.

   : 모델 메소드 : 데이터에 대해 저장,수정,삭제
  
   예)
   class Calculator{
   		public int plus(int su1, int su2){
   			return su1+su2;
   		}
   }
   ----> 데이터를 가공 처리
   int result = plus(2,3);
   
   class Person{
   		String name;
   		int age;
   		String job;
   }
   ----> 서로 관련있는 속성을 클래스로 묶음 : JavaBeans
   
   class DBTest{
   		public void insert(){
   		}
   }
   ----> DB access하는 클래스
  
   
2. View(뷰)
  - 사용자에게 알맞은 화면을 보여주는 역할 수행
  - JSP, CustomTag
  - 데이터를 시각적으로 표현하는것

	역할)
	1) 결과값 출력
	2) 사용자 요구(버튼클릭: 음료수가 먹고싶다.)
	3) 사용자 데이터 입력.
	

3. Controller
  - 애플리케이션의 흐름제어나 사용자의 처리요청을 구현
  - 사용자인증, 보안설정이라든지
         전체 애플리케이션에 영향을 미치는 요소 구현
  - 사용자 요청에 알맞은 모델을 사용하고
         사용자에게 보여줄 뷰를 선택
  - Servlet
  - 사용자가 View(GUI)를 통해 입력을 하면 Model(데이터)을
         변경해주는 것.
         
------------------------------------------------------------
<Simple계산기 작성>
 - MVC (Model, View, Controller)패턴으로 작성.
 - 뷰: (com.kosta.calc.view)
 	CalcView.java
 - 모델: (com.kosta.calc.model)
 	Calculator.java (CalcModel) - 사칙연산하는 기능의 메소드
 - 컨트롤러: (com.kosta.calc.control)
 	CalcController.java : 전체 프로그램제어
 						: 폼을 통해 전달된 요청을 분석해서 알맞은 메소드를 호출
  